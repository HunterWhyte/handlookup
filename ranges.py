

BBvsBULimp3wayKey = ["raise non all-in and go all-in vs re-raise", "all-in", "raise, fold vs 3bet", "check"]
BBvsBULimp3way = [[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3], [1, 1, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3], [1, 2, 2, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3], [1, 2, 3, 3, 0, 2, 3, 3, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1]]

BBvsBUminraise16BBandlesskey = ["call", "all-in", "fold"]
BBvsBUminraise16BBandless = [[0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 2, 0, 1, 0, 0, 0, 0], [1, 2, 2, 2, 2, 2, 2, 2, 0, 1, 0, 0, 0], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0], [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]]

BBvsBUminraise17BBandmorekey = ["raise non all-in and go all-in vs re-raise", "all-in", "call", "raise, fold vs 4bet", "fold"]
BBvsBUminraise17BBandmore = [[0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2], [1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 2, 2, 2], [2, 2, 4, 4, 2, 2, 2, 2, 1, 3, 3, 2, 2], [2, 2, 4, 4, 4, 4, 4, 2, 2, 1, 3, 2, 2], [2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 2], [2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2], [2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1]]

BBvsBUShove3way = [[20,20,20,20,20,20,13,13,13,13,13,10,10],
                   [20,20,15,13,11,10,10,9,8,7,7,6,6],
                   [20,12,20,14,10,10,7,6,6,5,5,4,4],
                   [20,11,9,20,10,7,6,5,4,4,4,4,4],
                   [20,10,8,7,20,7,6,5,4,4,3,3,3],
                   [16,9,6,5,5,20,6,5,4,4,3,3,3],
                   [13,7,5,4,4,4,20,5,4,4,3,3,3],
                   [13,6,4,4,3,3,4,20,5,4,3,3,3],
                   [12,6,3,3,3,3,3,3,20,4,3,3,3],
                   [10,5,3,3,3,3,3,3,3,20,4,3,3],
                   [10,4,3,3,3,3,3,3,3,3,16,3,3],
                   [8,4,3,3,3,3,1.5,3,3,3,3,11,3],
                   [8,4,3,3,3,1.5,1.5,1.5,1.5,3,1.5,1.5,9]]

BBvsSBLimp3wayKey = ["raise 3bb, all-in vs re-raise", "check", "raise 3bb, fold vs 3bet", "all-in"]
BBvsSBLimp3way = [[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 2, 2, 2], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 2, 2], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 2], [1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 2, 2], [1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 3, 2], [1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 3]]

BBvsSBminraise3waykey = ["raise 4bb, go all-in vs re-raise", "call", "all-in", "raise 4bb, fold vs 3bet", "fold"]
BBvsSBminraise3way = [[0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 2, 1, 1], [1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 2, 1, 1], [1, 3, 1, 1, 1, 4, 4, 4, 1, 1, 1, 2, 1], [1, 3, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 2]]

BBvsSBShove3way = [[20,20,20,20,20,20,20,19.999,16,13,13,13,13],
                   [20,20,20,19,18,13,13,9,9,9,9,9,7],
                   [20,16,20,19,16,9,9,8,7,7,5,5,5],
                   [20,13,13,20,19,9,8,7,5,5,5,4,4],
                   [20,13,9,9,20,9,7,7,5,4,4,4,3],
                   [20,11,9,7,7,20,7,7,5,4,3,3,3],
                   [20,9,7,5,5,4,20,7,4,4,3,3,3],
                   [16,9,5,5,4,4,4,20,4,4,3,3,3],
                   [13,9,5,4,3,3,3,3,20,4,3,3,3],
                   [13,8,5,4,3,3,3,3,3,20,4,3,3],
                   [12,7,4,3,3,3,2,2,3,3,19.999,3,3],
                   [11,5,4,3,3,2,2,2,2,2,2,14,3],
                   [11,5,4,3,3,2,2,2,2,2,2,2,11]]

BBvsSB25x3waykey = ["raise 7bb, all-in vs re-raise", "call", "all-in", "fold", "raise 7bb, fold vs 3bet"]
BBvsSB25x3way = [[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1], [1, 1, 1, 3, 3, 3, 1, 1, 2, 1, 1, 1, 1], [1, 1, 1, 3, 3, 3, 3, 1, 1, 2, 1, 1, 1], [1, 1, 1, 3, 3, 3, 3, 3, 1, 1, 2, 1, 1], [1, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1], [1, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]]

BUopen133waykey = ["raise 2bb, all-in vs 3bet, call all-in 3bet", "raise 2bb, fold vs 3bet", "raise 2bb, call non all-in, fold vs all-in", "fold"]
BUopen133way = [[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1], [0, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1, 3, 3], [0, 2, 2, 0, 2, 1, 1, 1, 3, 3, 3, 3, 3], [2, 1, 1, 1, 0, 1, 1, 1, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1, 0, 1, 1, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 1, 0, 1, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 0, 1, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 0, 1, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]]

BUpush123waykey = ["all-in","fold"]
BUpush123way = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]]

SBvsBUlimp3waykey = ["raise non all-in and go all-in vs re-raise", "limp, jam", "all-in", "raise and fold vs 3bet", "limp, and fold to a raise", "fold"]
SBvsBUlimp3way = [[0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4], [2, 2, 0, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4], [2, 3, 3, 0, 3, 3, 4, 4, 4, 4, 4, 4, 4], [2, 3, 3, 3, 0, 3, 4, 4, 4, 4, 4, 4, 4], [2, 4, 4, 4, 4, 1, 3, 4, 4, 4, 4, 4, 4], [2, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4], [2, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4], [2, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4], [2, 4, 4, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4], [2, 4, 4, 5, 5, 5, 5, 5, 4, 4, 2, 4, 4], [2, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 2, 4], [2, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2]]

SBvsBUraise3waykey = ["all-in", "fold"]
SBvsBUraise3way = [[0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]]

SB1417open3waykey = ["raise 2.25x, call vs 3bet, call vs all-in", "raise 2.25x, all in vs 3 bet, call all-in 3bet", "all-in", "limp, jam", "limp, call non all-in, fold to all-in", "limp, fold to a raise", "fold", "2.25x raise, fold vs 3bet"]
SB1417open3way = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2], [3, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2], [3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 4, 4], [2, 2, 4, 1, 2, 2, 2, 2, 4, 5, 5, 5, 5], [2, 2, 4, 4, 3, 2, 2, 2, 4, 5, 5, 5, 5], [2, 4, 4, 4, 4, 3, 2, 2, 2, 5, 6, 6, 6], [2, 5, 5, 5, 5, 5, 3, 2, 2, 5, 6, 6, 6], [2, 7, 7, 7, 7, 7, 5, 3, 2, 2, 5, 6, 6], [2, 7, 7, 6, 6, 6, 6, 5, 3, 2, 5, 6, 6], [2, 7, 6, 6, 6, 6, 6, 6, 6, 3, 2, 5, 6], [2, 7, 6, 6, 6, 6, 6, 6, 6, 6, 2, 5, 6], [2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 6], [2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2]]

SB18open3waykey = ["raise 2.5x, call any 3bet", "raise 2.5x, all-in vs 3bet, call vs all-in 3bet", "limp, call non all-in, fold to all-in", "raise 2.5x, call vs non all-in, fold vs all-in", "limp, fold to a raise", "limp, jam", "raise 2.5x, fold vs 3 bet", "fold", "all-in"]
SB18open3way = [[0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2], [1, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3], [1, 2, 4, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3], [5, 2, 2, 2, 5, 2, 2, 2, 2, 2, 3, 3, 3], [5, 2, 6, 6, 6, 5, 2, 2, 2, 6, 6, 3, 3], [2, 6, 6, 6, 6, 6, 5, 2, 6, 6, 6, 7, 7], [2, 6, 3, 3, 3, 3, 6, 5, 6, 6, 6, 7, 7], [2, 6, 3, 7, 7, 7, 3, 3, 5, 6, 6, 6, 7], [2, 3, 3, 7, 7, 7, 7, 7, 3, 5, 6, 6, 6], [2, 3, 7, 7, 7, 7, 7, 7, 7, 7, 8, 6, 7], [2, 3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7], [2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8]]


HUopen710SBkey = ["limp, call any", "limp, jam", "all-in", "limp, call non all-in, fold to all-in", "limp, fold", "fold"]
HUopen710SB = [[0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2], [2, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2], [2, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 0, 0, 2, 2, 2, 2, 3, 3, 4, 4], [2, 2, 2, 2, 1, 2, 2, 2, 2, 3, 4, 4, 4], [2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 3, 4, 4], [2, 2, 2, 3, 3, 3, 1, 2, 2, 2, 3, 4, 4], [2, 2, 3, 3, 3, 3, 3, 1, 2, 2, 2, 4, 4], [2, 2, 3, 4, 4, 4, 4, 3, 1, 2, 2, 3, 4], [2, 2, 3, 4, 5, 5, 4, 4, 4, 1, 2, 4, 4], [2, 2, 4, 5, 5, 5, 5, 5, 5, 5, 2, 4, 4], [2, 2, 4, 5, 5, 5, 5, 5, 5, 5, 5, 2, 4], [2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2]]

HUopen1113SBkey = ["limp, call any", "limp, jam", "all-in", "limp, fold", "limp, call non all-in, fold to all-in", "fold"]
HUopen1113SB = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], [1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 0, 2, 2, 2, 2, 2, 2, 3, 3], [2, 1, 2, 2, 1, 0, 2, 2, 2, 2, 3, 3, 3], [2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 3, 3, 3], [2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 3, 3, 3], [2, 2, 3, 3, 3, 4, 2, 1, 2, 2, 3, 3, 3], [2, 2, 3, 3, 3, 3, 4, 4, 1, 2, 2, 3, 3], [2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 2, 3, 3], [2, 2, 3, 3, 5, 5, 5, 5, 5, 5, 2, 3, 3], [2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 2, 3], [2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2]]

HUopenSBkey = ["raise 2x, call any", "raise 2x, go all-in vs 3bet, call all-in 3bet", "limp, call non all-in, fold to all-in", "raise 2x, call non all-in, fold vs all-in", "raise 2x, fold to any 3bet", "limp, jam", "limp, fold", "all-in", "fold"]
HUopenSB = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2], [1, 0, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4], [1, 1, 1, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4], [5, 2, 2, 1, 2, 2, 3, 4, 4, 4, 4, 4, 4], [5, 2, 2, 2, 5, 2, 2, 4, 4, 4, 4, 4, 4], [5, 4, 4, 4, 4, 5, 2, 4, 4, 4, 4, 4, 6], [2, 4, 4, 4, 4, 4, 5, 2, 4, 4, 4, 6, 6], [2, 4, 4, 4, 4, 4, 4, 5, 2, 4, 4, 6, 6], [3, 4, 4, 6, 6, 6, 6, 4, 7, 4, 4, 4, 6], [3, 4, 6, 6, 6, 6, 6, 6, 4, 7, 4, 4, 6], [3, 4, 6, 6, 8, 8, 8, 8, 6, 6, 7, 4, 6], [3, 4, 6, 6, 8, 8, 8, 8, 8, 8, 8, 7, 6], [3, 4, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 7]]

BBdefendvslimp14HUkey = ["raise 2.5bb, all-in vs re-raise", "all-in", "check", "raise 2.5bb, fold to 3-bet"]
BBdefendvslimp14HU = [[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 1, 1], [1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 1, 1], [1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 2, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2], [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2], [1, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 2, 2], [1, 1, 2, 2, 2, 2, 3, 3, 1, 1, 1, 2, 2], [1, 1, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 2], [1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 2], [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 2], [1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1]]

BBdefendvslimp15HUkey = ["raise 3bb, all-in vs re-raise", "all-in", "check", "raise 3bb, fold vs re-raise"]
BBdefendvslimp15HU = [[0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 1, 1], [1, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2], [1, 2, 2, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2], [1, 2, 2, 2, 2, 3, 1, 1, 1, 1, 2, 2, 2], [1, 2, 2, 2, 2, 3, 3, 1, 1, 1, 1, 2, 2], [1, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 2, 2], [1, 2, 2, 2, 2, 2, 2, 3, 3, 1, 1, 1, 2], [1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 2], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 2], [1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1]]

BBdefendvsminHUkey = ["raise 6bb, all-in vs 3bet", "all-in", "call", "raise 6bb, fold vs 3bet", "fold"]
BBdefendvsminHU = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                   [1, 0, 1, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1],
                   [1, 1, 0, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1],
                   [1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2],
                   [1, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2],
                   [1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],
                   [1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],
                   [1, 2, 2, 3, 3, 2, 2, 1, 2, 2, 2, 2, 2],
                   [1, 2, 2, 4, 4, 4, 2, 2, 1, 2, 2, 2, 2],
                   [1, 2, 2, 4, 4, 4, 4, 2, 2, 1, 2, 2, 2],
                   [1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 2],
                   [1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2],
                   [1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1]]

BBvsSBshoveHU = [[20,20,20,20,20,20,20,20,20,20,17,15,14],
                 [20,20,20,20,18,14,13,12,11,10,10,9,9],
                 [20,20,20,20,16,11,10,9,7,7,7,6,5],
                 [20,14,12,20,16,9,7,7,7,5,4,4,4],
                 [20,12,11,10,20,9,7,7,4,4,4,3,3],
                 [20,12,9,7,6,20,7,7,4,3,3,3,3],
                 [16,11,7,6,4,4,20,7,4,3,3,3,3],
                 [15,10,6,4,4,4,4,20,4,4,3,3,3],
                 [15,9,5,4,3,3,3,3,3,20,4,3,3],
                 [15,8,5,4,3,3,3,3,3,20,4,3,3],
                 [14,7,4,4,3,3,3,3,3,3,18,3,3],
                 [13,6,4,3,3,2,2,2,2,2,2,16,3],
                 [12,6,4,3,3,2,2,2,2,2,2,2,14]]



nashpush =    [['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+'],
               ['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '19.9', '19.3'],
               ['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '16.3', '13.5', '12.7'],
               ['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '18.6', '14.7', '13.5', '10.6', '8.5'],
               ['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '11.9', '10.5', '7.7', '6.5'],
               ['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '14.4', '6.9', '4.9', '3.7'],
               ['20+', '18.0', '13.0', '13.3', '17.5', '20+', '20+', '20+', '20+', '18.8', '10.1', '2.7', '2.5'],
               ['20+', '16.1', '10.3', '8.5', '9.0', '10.8', '14.7', '20+', '20+', '20+', '13.9', '2.5', '2.1'],
               ['20+', '15.1', '9.6', '6.5', '5.7', '5.2', '7.0', '10.7', '20+', '20+', '16.3', "2.3", '2.0'],
               ['20+', '14.2', '8.9', '6.0', '4.1', '3.5', '3.0', '2.6', '2.4', '20+', '20+', '2.4', '2.0'],
               ['20+', '13.1', '7.9', '5.4', '3.8', '2.7', '2.3', '2.1', '2.0', '2.1', '20+', '2.2', '1.8'],
               ['20+', '12.2', '7.5', '5.0', '3.4', '2.5', '1.9', '1.', '1.7', '1.8', '1.6', '20+', '1.7'],
               ['20+', '11.6', '7.0', '4.6', '2.9', '2.2', '1.8', '1.6', '1.5', '1.5', '1.4', '1.4', '20+']]

nashcall =   [['20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+', '20+'],
              ['20+', '20+', '20+', '20+', '20+', '20+', '17.6', '15.2', '14.3', '13.2', '12.4', '11.4', '10.7'],
              ['20+', '20+', '20+', '20+', '20+', '16.1', '13.0', '10.5', '9.9', '8.9', '8.4', '7.8', '7.2'],
              ['20+', '20+', '19.5', '20+', '18.0', '13.4', '10.6', '8.8', '7.0', '6.9', '6.1', '5.8', '5.6'],
              ['20+', '20+', '15.3', '12.7', '20+', '11.5', '9.3', '7.4', '6.3', '5.2', '5.2', '4.8', '4.5'],
              ['20+', '17.1', '11.7', '9.5', '8.4', '20+', '8.2', '7.0', '5.8', '5.0', '4.3', '4.1', '3.9'],
              ['20+', '13.8', '9.7', '7.6', '6.6', '6.0', '20+', '6.5', '5.6', '4.8', '4.1', '3.6', '3.5'],
              ['20+', '12.4', '8.0', '6.4', '5.5', '5.0', '4.7', '20+', '5.4', '4.8', '4.1', '3.6', '3.3'],
              ['20+', '11.0', '7.3', '5.4', '4.6', '4.2', '4.1', '4.0', '20+', '4.9', '4.3', '3.8', '3.3'],
              ['20+', '10.2', '6.8', '5.1', '4.0', '3.7', '3.6', '3.6', '3.7', '20+', '4.6', '4.0', '3.6'],
              ['18.3', '9.1', '6.2', '4.7', '3.8', '3.3', '3.2', '3.2', '3.3', '3.5', '20+', '3.8', '3.4'],
              ['16.6', '8.7', '5.9', '4.5', '3.6', '3.1', '2.9', '2.9', '2.9', '3.1', '3.0', '20+', '3.3'],
              ['15.8', '8.1', '5.6', '4.2', '3.5', '3.0', '2.8', '2.6', '2.7', '2.8', '2.7', '2.6', '15.0']]



def lookup(x,y,players,position,action,stack):
    if players == 2:
        if position == 1:
            if action == 1:
                #SB minraise HU
                return(BBdefendvsminHUkey[BBdefendvsminHU[y][x]])
            elif action == 2:
                # SB shove HU
                call = BBvsSBshoveHU[y][x]
                if call == 20:
                    return("call (20+ BB)")
                elif call > stack:
                    return("call (" + "{:3.1f}".format(call) + " BB)")
                else:
                    return("fold (" + "{:3.1f}".format(call) + " BB)")
            elif action == 3:
                # SB limp, HU
                if stack >= 15:
                    # more than 15BB
                    return(BBdefendvslimp15HUkey[BBdefendvslimp15HU[y][x]])
                else:
                    #less than 15BB
                    return(BBdefendvslimp14HUkey[BBdefendvslimp14HU[y][x]])

        elif position == 2:
            if action == 1:
                if stack >= 14:
                    return(HUopenSBkey[HUopenSB[y][x]])
                elif stack >= 11:
                    return(HUopen1113SBkey[HUopen1113SB[y][x]])
                elif stack >= 7:
                    return(HUopen710SBkey[HUopen710SB[y][x]])
                else:
                    push = nashpush[y][x]
                    if push == "20+":
                        return ("push (20+ BB)")
                    elif float(push) > stack:
                        return ("push (" + "{:3.1f}".format(float(push)) + " BB)")
                    else:
                        return ("fold (" + "{:3.1f}".format(float(push)) + " BB)")
        elif position == 3:
            if action == 1:
                push = nashpush[y][x]
                if push == "20+":
                    return ("push (20+ BB)")
                elif float(push) > stack:
                    return ("push (" + "{:3.1f}".format(float(push)) + " BB)")
                else:
                    return ("fold (" + "{:3.1f}".format(float(push)) + " BB)")
            elif action == 2:
                call = nashcall[y][x]
                if call == "20+":
                    return ("call (20+ BB)")
                elif float(call) > stack:
                    return ("call (" + "{:3.1f}".format(float(call)) + " BB)")
                else:
                    return ("fold (" + "{:3.1f}".format(float(call)) + " BB)")

    elif players == 3:
        if position == 1:
            if action == 1:
                # BU minraise
                if stack >= 17:
                    # 17 and more
                    return(BBvsBUminraise17BBandmorekey[BBvsBUminraise17BBandmore[y][x]])
                else:
                    # 16 and less
                    return(BBvsBUminraise16BBandlesskey[BBvsBUminraise16BBandless[y][x]])
            elif action == 2:
                # BU shove
                call = BBvsBUShove3way[y][x]
                if call == 20:
                    return("call (20+ BB)")
                elif call > stack:
                    return("call (" + "{:3.1f}".format(call) + " BB)")
                else:
                    return("fold (" + "{:3.1f}".format(call) + " BB)")
            elif action == 3:
                # BU limp
                return (BBvsBULimp3wayKey[BBvsBULimp3way[y][x]])
            elif action == 4:
                # SB minraise
                return (BBvsSBminraise3waykey[BBvsSBminraise3way[y][x]])
            elif action == 5:
                # SB 2.5x
                return (BBvsSB25x3waykey[BBvsSB25x3way[y][x]])
            elif action == 6:
                # SB shove
                call = BBvsSBShove3way[y][x]
                if call == 20:
                    return("call (20+ BB)")
                elif call > stack:
                    return("call (" + "{:3.1f}".format(call) + " BB)")
                else:
                    return("fold (" + "{:3.1f}".format(call) + " BB)")
            else:
                # SB limp
                return (BBvsSBLimp3wayKey[BBvsSBLimp3way[y][x]])


        elif position == 2:
            if action == 1:
                # BU minraise
                return (SBvsBUraise3waykey[SBvsBUraise3way[y][x]])
            elif action == 2:
                # BU limp
                return (SBvsBUlimp3waykey[SBvsBUlimp3way[y][x]])
            else:
                # BU fold/ SB open
                if stack >= 18:
                    return (SB18open3waykey[SB18open3way[y][x]])
                elif stack >= 14:
                    return (SB1417open3waykey[SB1417open3way[y][x]])
                else:
                    push = nashpush[y][x]
                    if push == "20+":
                        return ("push (20+ BB)")
                    elif float(push) > stack:
                        return ("push (" + "{:3.1f}".format(float(push)) + " BB)")
                    else:
                        return ("fold (" + "{:3.1f}".format(float(push)) + " BB)")
        elif position == 3:
            if action == 1:
                # BU open 3 way
                if stack >= 13:
                    return (BUopen133waykey[BUopen133way[y][x]])
                else:
                    return (BUpush123waykey[BUpush123way[y][x]])

